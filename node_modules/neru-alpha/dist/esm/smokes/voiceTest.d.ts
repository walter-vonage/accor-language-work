import { INeru } from "../INeru.js";
import { ISession } from "../session/ISession.js";
import { IVoice } from "../providers/voice/IVoice.js";
import { IAcceptInboundCallEvent } from "../providers/voice/contracts/IAcceptInboundCallEvent.js";
import { IState } from "../providers/state/IState.js";
import { Bridge } from "../bridge.js";
export declare class VoiceSmokeTests {
    neru: INeru;
    session: ISession;
    voice: IVoice;
    state: IState;
    bridge: Bridge;
    events: string[];
    constructor();
    checkIncomingEventsAndHitHealthEndpointIfSuccessful(status: string, successPathname: string): Promise<void>;
    answer(event: IAcceptInboundCallEvent): Promise<void>;
    onInboundCall(callback: string, to: string): Promise<void>;
    call(fromNumber: string, toNumber: string, eventCallback: string): Promise<void>;
}
//# sourceMappingURL=voiceTest.d.ts.map