import { IBridge } from "./IBridge.js";
import { IRequestParams } from "./request/IRequestParams.js";
import { PathObject } from "./services/config/pathObject.js";
export declare class Bridge implements IBridge {
    constructor();
    encodeUriComponent(s: string): string;
    parsePath(path: string): PathObject;
    private configureHttp;
    testRegEx(str: string, regExp: string): boolean;
    isInteger(value: number): boolean;
    substring(str: string, start: number, end?: number): string;
    getObjectKeys<T>(obj: T): string[];
    jsonStringify<T>(value: T): string;
    jsonParse<T>(json: string): T;
    getEnv(name: string): string;
    log(data: any): void;
    runBackgroundTask(task: any): void;
    createReadStream(path: string): any;
    private constructFormData;
    request<T, K>(params: IRequestParams<T>): Promise<K>;
    requestWithoutResponse<T>(params: IRequestParams<T>): Promise<void>;
    uuid(): string;
    isoDate(): string;
    toISOString(seconds: number): string;
    jwtSign(payload: any, privateKey: string, alg: string, options?: any): string;
    jwtVerify<T>(token: string, privateKey: string, algorithm: string): any;
    jwtDecode<T>(token: string): any;
    /**
     *
     * @returns amount of seconds since 1970-01-01T00:00:00Z
     */
    getSystemTime(): number;
}
//# sourceMappingURL=bridge.d.ts.map