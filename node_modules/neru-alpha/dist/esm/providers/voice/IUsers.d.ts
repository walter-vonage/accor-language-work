import { RequestInterface } from '../../session/requestInterface.js';
import { InvokePayload } from '../vonageAPI/contracts/invokePayload.js';
import { CreateUserPayload } from './contracts/createUserPayload.js';
import { UserResponse } from './contracts/userResponse.js';
import { GetUsersResponse } from './contracts/getUsersResponse.js';
import { UpdateUserPayload } from './contracts/updateUserPayload.js';
import { ICreateUserPayload } from './contracts/ICreateUserPayload.js';
import { IUpdateUserPayload } from './contracts/IUpdateUserPayload.js';
export interface IUsers {
    getUsers(page_size?: number, order?: string, pageUrl?: string): RequestInterface<InvokePayload<null>, GetUsersResponse>;
    getUser(user_id?: string): RequestInterface<InvokePayload<null>, UserResponse>;
    createUser(createUserPayload: ICreateUserPayload): RequestInterface<InvokePayload<CreateUserPayload>, UserResponse>;
    updateUser(user_id: string, updateUserPayload: IUpdateUserPayload): RequestInterface<InvokePayload<UpdateUserPayload>, UserResponse>;
    deleteUser(user_id: string): RequestInterface<InvokePayload<null>, null>;
}
//# sourceMappingURL=IUsers.d.ts.map