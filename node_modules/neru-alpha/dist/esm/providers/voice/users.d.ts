import { ISession } from '../../session/ISession.js';
import { RequestInterface } from "../../session/requestInterface.js";
import { InvokePayload } from "../vonageAPI/contracts/invokePayload.js";
import { CreateUserPayload } from "./contracts/createUserPayload.js";
import { IUsers } from "./IUsers.js";
import { GetUsersResponse } from './contracts/getUsersResponse.js';
import { UserResponse } from './contracts/userResponse.js';
import { UpdateUserPayload } from './contracts/updateUserPayload.js';
export declare class Users implements IUsers {
    private session;
    private vonageAPI;
    private baseUrl;
    private bridge;
    constructor(session: ISession);
    getUsers(page_size?: number, order?: string, pageUrl?: string): RequestInterface<InvokePayload<null>, GetUsersResponse>;
    getUser(user_id: string): RequestInterface<InvokePayload<null>, UserResponse>;
    createUser(createUserPayload: CreateUserPayload): RequestInterface<InvokePayload<CreateUserPayload>, UserResponse>;
    updateUser(user_id: string, updateUserPayload: UpdateUserPayload): RequestInterface<InvokePayload<UpdateUserPayload>, UserResponse>;
    deleteUser(user_id: string): RequestInterface<InvokePayload<null>, null>;
    private buildUrl;
}
//# sourceMappingURL=users.d.ts.map