import { RequestInterface } from '../../session/requestInterface.js';
import { IScheduler } from './IScheduler.js';
import { SchedulerPayload } from './contracts/schedulerPayload.js';
import { IStartAtParams } from './contracts/IStartAtParams.js';
import { ISession } from '../../session/ISession.js';
import { RequestInterfaceForCallbacks } from '../../session/requestInterfaceForCallbacks.js';
import { ListAllSchedulersResponse } from './contracts/listAllSchedulersResponse.js';
import { GetSchedulerResponse } from './contracts/getSchedulerResponse.js';
import { ListAllPayload } from './contracts/listAllPayload.js';
export declare class Scheduler implements IScheduler {
    private session;
    private provider;
    private bridge;
    constructor(session: ISession);
    startAt<T>(params: IStartAtParams<T>): RequestInterfaceForCallbacks;
    listAll(size?: number, cursor?: string): RequestInterface<ListAllPayload, ListAllSchedulersResponse>;
    get(scheduleId: string): RequestInterface<SchedulerPayload, GetSchedulerResponse>;
    cancel(scheduleId: string): RequestInterface<SchedulerPayload, string>;
}
//# sourceMappingURL=scheduler.d.ts.map