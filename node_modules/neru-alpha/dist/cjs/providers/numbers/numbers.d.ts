import { IBridge } from '../../IBridge.js';
import { ISession } from '../../session/ISession.js';
import { RequestInterface } from '../../session/requestInterface.js';
import { InvokePayload } from '../vonageAPI/contracts/invokePayload.js';
import { IVonageAPI } from '../vonageAPI/IVonageAPI.js';
import { IGetNumbersOptions } from './contracts/IGetNumbersOptions.js';
import { INumberOptions } from './contracts/INumberOptions.js';
import { ISearchNumbersOptions } from './contracts/ISearchNumbersOptions.js';
import { IUpdateNumberOptions } from './contracts/IUpdateNumberOptions.js';
import { GetNumbersResponse } from './contracts/getNumbersResponse.js';
import { NumbersOperationResponse } from './contracts/numbersOperationResponse.js';
export declare class Numbers {
    session: ISession;
    vonageAPI: IVonageAPI;
    baseUrl: string;
    accountUrl: string;
    bridge: IBridge;
    constructor(session: ISession);
    getNumbers(apiKey: string, apiSecret: string, getNumberOptions?: IGetNumbersOptions): RequestInterface<InvokePayload<null>, GetNumbersResponse>;
    searchNumbers(apiKey: string, apiSecret: string, searchNumberOptions: ISearchNumbersOptions): RequestInterface<InvokePayload<null>, GetNumbersResponse>;
    buyNumber(apiKey: string, apiSecret: string, numberOptions: INumberOptions): RequestInterface<InvokePayload<null>, NumbersOperationResponse>;
    cancelNumber(apiKey: string, apiSecret: string, numberOptions: INumberOptions): RequestInterface<InvokePayload<null>, NumbersOperationResponse>;
    updateNumber(apiKey: string, apiSecret: string, updateNumberOptions: IUpdateNumberOptions): RequestInterface<InvokePayload<null>, NumbersOperationResponse>;
    private buildUrl;
}
//# sourceMappingURL=numbers.d.ts.map