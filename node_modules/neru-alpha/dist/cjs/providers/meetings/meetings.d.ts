import { ISession } from "../../session/ISession.js";
import { RequestInterface } from "../../session/requestInterface.js";
import { InvokePayload } from "../vonageAPI/contracts/invokePayload.js";
import { DeleteRoomPayload } from "./contracts/deleteRoomPayload.js";
import { ICreateRoomPayload } from "./contracts/ICreateRoomPayload.js";
import { UpdateRoomPayload } from "./contracts/updateRoomPayload.js";
import { RoomResponse } from "./contracts/roomResponse.js";
import { GetRoomsResponse } from "./contracts/getRoomsResponse.js";
export declare class Meetings {
    private session;
    private vonageAPI;
    private baseUrl;
    constructor(session: ISession);
    getRoom(roomId: string): RequestInterface<InvokePayload<null>, RoomResponse>;
    getRooms(paginationUrl?: string): RequestInterface<InvokePayload<any>, GetRoomsResponse>;
    createRoom(createRoomPayload: ICreateRoomPayload): RequestInterface<InvokePayload<ICreateRoomPayload>, RoomResponse>;
    updateRoom(roomId: string, expiry: string, expireAfterUse: boolean): RequestInterface<InvokePayload<UpdateRoomPayload>, RoomResponse>;
    deleteRoom(roomId: string): RequestInterface<InvokePayload<DeleteRoomPayload>, RoomResponse>;
}
//# sourceMappingURL=meetings.d.ts.map