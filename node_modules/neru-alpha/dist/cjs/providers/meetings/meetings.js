"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.Meetings = void 0;
const vonageAPI_js_1 = require("../vonageAPI/vonageAPI.js");
const deleteRoomPayload_js_1 = require("./contracts/deleteRoomPayload.js");
const updateRoomDetails_js_1 = require("./contracts/updateRoomDetails.js");
const updateRoomPayload_js_1 = require("./contracts/updateRoomPayload.js");
const requestMethods_js_1 = require("../../request/requestMethods.js");
class Meetings {
    constructor(session) {
        this.session = session;
        this.vonageAPI = new vonageAPI_js_1.VonageAPI(this.session);
        this.baseUrl = "https://api-eu.vonage.com/beta/meetings";
    }
    getRoom(roomId) {
        const url = `${this.baseUrl}/rooms/${roomId}`;
        const method = requestMethods_js_1.RequestMethods.GET;
        return this.vonageAPI.invoke(url, method, null);
    }
    getRooms(paginationUrl) {
        let url = `${this.baseUrl}/rooms`;
        if (paginationUrl != null) {
            url = paginationUrl;
        }
        const method = requestMethods_js_1.RequestMethods.GET;
        return this.vonageAPI.invoke(url, method, null);
    }
    createRoom(createRoomPayload) {
        const url = `${this.baseUrl}/rooms`;
        const method = requestMethods_js_1.RequestMethods.POST;
        return this.vonageAPI.invoke(url, method, createRoomPayload);
    }
    updateRoom(roomId, expiry, expireAfterUse) {
        const details = new updateRoomDetails_js_1.UpdateRoomDetails(expiry, expireAfterUse);
        const payload = new updateRoomPayload_js_1.UpdateRoomPayload(details);
        const url = `${this.baseUrl}/rooms/${roomId}`;
        const method = requestMethods_js_1.RequestMethods.PATCH;
        return this.vonageAPI.invoke(url, method, payload);
    }
    deleteRoom(roomId) {
        const url = `${this.baseUrl}/rooms/${roomId}`;
        const method = requestMethods_js_1.RequestMethods.DEL;
        const payload = new deleteRoomPayload_js_1.DeleteRoomPayload();
        return this.vonageAPI.invoke(url, method, payload);
    }
}
exports.Meetings = Meetings;
//# sourceMappingURL=meetings.js.map