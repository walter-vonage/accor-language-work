import { ISession } from "../../session/ISession.js";
import { IAssets } from "./IAssets.js";
import { AssetLinkResponse } from "./contracts/assetLinkResponse.js";
import { AssetListResponse } from "./contracts/assetListResponse.js";
import { FILE_RETENTION_PERIOD } from "./enums/fileRetentionPeriod.js";
export declare class Assets implements IAssets {
    private config;
    private provider;
    private session;
    private bridge;
    constructor(session: ISession);
    createDir(name: string): Promise<void>;
    remove(remoteFilePath: string, recursive?: boolean): Promise<void>;
    getRemoteFile(remoteFilePath: string): Promise<string>;
    generateLink(remoteFilePath: string, duration?: string): Promise<AssetLinkResponse>;
    uploadFiles(localFilePaths: string[], remoteDir: string, retentionPeriod?: FILE_RETENTION_PERIOD): Promise<void>;
    uploadData(data: any[], remoteDir: string, filenames?: string[], retentionPeriod?: FILE_RETENTION_PERIOD): Promise<void>;
    list(remotePath: string, recursive?: boolean, limit?: number): Promise<AssetListResponse>;
}
//# sourceMappingURL=assets.d.ts.map