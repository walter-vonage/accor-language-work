var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __generator = (this && this.__generator) || function (thisArg, body) {
    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
    return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;
    function verb(n) { return function (v) { return step([n, v]); }; }
    function step(op) {
        if (f) throw new TypeError("Generator is already executing.");
        while (g && (g = 0, op[0] && (_ = 0)), _) try {
            if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
            if (y = 0, t) op = [op[0] & 2, t.value];
            switch (op[0]) {
                case 0: case 1: t = op; break;
                case 4: _.label++; return { value: op[1], done: false };
                case 5: _.label++; y = op[1]; op = [0]; continue;
                case 7: op = _.ops.pop(); _.trys.pop(); continue;
                default:
                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }
                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }
                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }
                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }
                    if (t[2]) _.ops.pop();
                    _.trys.pop(); continue;
            }
            op = body.call(thisArg, _);
        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }
        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };
    }
};
import { VCRSession } from "./session/vcrSession.js";
import { JWT } from "./services/jwt/jwt.js";
import { Bridge } from "./bridge.js";
import { Config } from "./services/config/config.js";
import { State } from "./providers/state/state.js";
import { UnsubscribeEventsPayload } from "./providers/messages/contracts/unsubscribeEventsPayload.js";
import { ActionPayload } from "./session/contracts/actionPayload.js";
import { MESSAGE_ACTION } from "./providers/messages/enums/messageAction.js";
import { RequestParams } from "./request/contracts/requestParams.js";
import { Command } from "./session/contracts/command.js";
import { REQUEST_VERB } from "./request/enums/requestVerb.js";
var VCR = /** @class */ (function () {
    function VCR() {
        this.bridge = new Bridge();
        this.config = new Config(this.bridge);
        this.jwt = new JWT(this.bridge, this.config);
    }
    VCR.prototype.unsubscribe = function (id, provider) {
        if (provider === void 0) { provider = "vonage-messaging"; }
        return __awaiter(this, void 0, void 0, function () {
            var p, a, s, ch, rp;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        p = new UnsubscribeEventsPayload(id);
                        a = new ActionPayload(provider, MESSAGE_ACTION.UNSUBSCRIBE_EVENTS, p);
                        s = this.getGlobalSession();
                        ch = s.constructCommandHeaders();
                        rp = new RequestParams();
                        rp.method = REQUEST_VERB.POST;
                        rp.data = new Command(ch, a);
                        rp.headers = s.constructRequestHeaders();
                        rp.url = s.config.getExecutionUrl(provider);
                        return [4 /*yield*/, s.request(rp)];
                    case 1: return [2 /*return*/, _a.sent()];
                }
            });
        });
    };
    VCR.prototype.createVonageToken = function (params) {
        if (params == null) {
            throw this.bridge.createSdkError("createVonageToken: params is required");
        }
        if (params.exp == null) {
            throw this.bridge.createSdkError("createVonageToken: params.exp is required");
        }
        return this.jwt.createVonageToken(params);
    };
    /**
     * Create a new session
     * @param ttl time to live in seconds, defaults to 7 days
     * @returns
     */
    VCR.prototype.createSession = function (ttl) {
        if (ttl === void 0) { ttl = 7 * 24 * 60 * 60; }
        // validate ttl is a positive integer
        if (this.bridge.isInteger(ttl) == false || ttl < 0) {
            throw this.bridge.createSdkError("createSession: ttl must be a positive integer");
        }
        var id = this.bridge.uuid();
        var session = this.createSessionWithId(id);
        this.bridge.runBackgroundTask(session.emitSessionCreatedEvent(ttl));
        return session;
    };
    VCR.prototype.createSessionWithId = function (id) {
        return new VCRSession(this.bridge, this.config, this.jwt, id);
    };
    VCR.prototype.getSessionById = function (id) {
        if (id == null) {
            throw this.bridge.createSdkError("getSessionById: id is required");
        }
        return this.createSessionWithId(id);
    };
    VCR.prototype.getAppUrl = function () {
        return this.config.appUrl;
    };
    VCR.prototype.getSessionFromRequest = function (req) {
        if (req == null) {
            throw this.bridge.createSdkError("getSessionFromRequest: function requires request object to be provided");
        }
        if (req.headers == null) {
            throw this.bridge.createSdkError("getSessionFromRequest: invalid request object proivided");
        }
        var id = req.headers["x-neru-sessionid"];
        if (id == null) {
            throw this.bridge.createSdkError("getSessionFromRequest: request does not contain \"x-neru-sessionid\" header");
        }
        return this.getSessionById(id);
    };
    VCR.prototype.getGlobalSession = function () {
        var uuid = "00000000-0000-0000-0000-000000000000";
        return this.getSessionById(uuid);
    };
    /**
     * Returns the instance state that is shared across all sessions within the same instance.
     */
    VCR.prototype.getInstanceState = function () {
        var session = this.getGlobalSession();
        return new State(session, "application:".concat(this.config.instanceId));
    };
    /**
     * Returns the account state that is shared across all applications within the same account.
     */
    VCR.prototype.getAccountState = function () {
        var session = this.getGlobalSession();
        return new State(session, "account");
    };
    return VCR;
}());
export { VCR };
export var vcr = new VCR();
// IMPORTANT: autogenerated code starts here, DO NOT DELETE OR CHANGE THIS COMMENT.
export * from "./bridge.js";
export * from "./IVCR.js";
export * from "./IBridge.js";
export * from "./webhookEvents/urlPayload.js";
export * from "./webhookEvents/baseEvent.js";
export * from "./webhookEvents/IUrlPayload.js";
export * from "./webhookEvents/IBaseEvent.js";
export * from "./session/vcrSession.js";
export * from "./session/ISession.js";
export * from "./errors/ISdkError.js";
export * from "./webhookEvents/enums/webhookEventType.js";
export * from "./services/jwt/jwt.js";
export * from "./services/jwt/IJwt.js";
export * from "./services/config/pathObject.js";
export * from "./services/config/config.js";
export * from "./services/config/IPathObject.js";
export * from "./services/config/IConfig.js";
export * from "./session/contracts/wrappedCallback.js";
export * from "./session/contracts/filter.js";
export * from "./session/contracts/command.js";
export * from "./session/contracts/actionPayload.js";
export * from "./session/contracts/IWrappedCallback.js";
export * from "./session/contracts/IPayloadWithCallback.js";
export * from "./session/contracts/IFilter.js";
export * from "./session/contracts/ICommand.js";
export * from "./session/contracts/IActionPayload.js";
export * from "./providers/vonageAPI/vonageAPIActions.js";
export * from "./providers/vonageAPI/vonageAPI.js";
export * from "./providers/vonageAPI/IVonageAPI.js";
export * from "./providers/voice/voice.js";
export * from "./providers/voice/IVoice.js";
export * from "./providers/state/state.js";
export * from "./providers/state/IState.js";
export * from "./providers/scheduler/scheduler.js";
export * from "./providers/scheduler/IScheduler.js";
export * from "./providers/queue/queue.js";
export * from "./providers/queue/IQueue.js";
export * from "./providers/messages/messages.js";
export * from "./providers/messages/IMessages.js";
export * from "./providers/logger/logger.js";
export * from "./providers/logger/ILogger.js";
export * from "./providers/events/eventFactory.js";
export * from "./providers/events/eventEmitter.js";
export * from "./providers/events/IEventFactory.js";
export * from "./providers/events/IEventEmitter.js";
export * from "./providers/assets/assets.js";
export * from "./providers/assets/IAssets.js";
export * from "./providers/conversation/conversation.js";
export * from "./providers/conversation/IConversation.js";
export * from "./request/enums/responseTypes.js";
export * from "./request/enums/requestVerb.js";
export * from "./request/enums/dataType.js";
export * from "./request/contracts/requestParams.js";
export * from "./request/contracts/request.js";
export * from "./request/contracts/formDataObject.js";
export * from "./request/contracts/IRequestParams.js";
export * from "./request/contracts/IRequest.js";
export * from "./request/contracts/IFormDataObject.js";
export * from "./services/jwt/enums/algorithm.js";
export * from "./services/jwt/contracts/vonageJWTPayload.js";
export * from "./services/jwt/contracts/vcrJWTPayload.js";
export * from "./services/jwt/contracts/createVonageTokenParams.js";
export * from "./services/jwt/contracts/acl.js";
export * from "./services/jwt/contracts/ICreateVonageTokenParams.js";
export * from "./services/jwt/contracts/IAcl.js";
export * from "./providers/vonageAPI/contracts/invokePayload.js";
export * from "./providers/vonageAPI/contracts/IInvokePayload.js";
export * from "./providers/voice/enums/voiceAction.js";
export * from "./providers/voice/contracts/callEventParams.js";
export * from "./providers/voice/contracts/callAnswerCallBack.js";
export * from "./providers/voice/contracts/ICallEventParams.js";
export * from "./providers/voice/contracts/ICallEventCallBackPayload.js";
export * from "./providers/voice/contracts/ICallAnswerCallBack.js";
export * from "./providers/voice/contracts/CallEventCallBackPayload.js";
export * from "./providers/state/enums/stateOperations.js";
export * from "./providers/state/enums/expireOption.js";
export * from "./providers/state/contracts/stateCommand.js";
export * from "./providers/state/contracts/IStateCommand.js";
export * from "./providers/scheduler/enums/schedulerAction.js";
export * from "./providers/scheduler/contracts/untilParams.js";
export * from "./providers/scheduler/contracts/startAtPayload.js";
export * from "./providers/scheduler/contracts/startAtParams.js";
export * from "./providers/scheduler/contracts/schedulerPayload.js";
export * from "./providers/scheduler/contracts/schedulerIDResponse.js";
export * from "./providers/scheduler/contracts/schedulerExecutionInfo.js";
export * from "./providers/scheduler/contracts/listAllSchedulersResponse.js";
export * from "./providers/scheduler/contracts/listAllPayload.js";
export * from "./providers/scheduler/contracts/intervalParams.js";
export * from "./providers/scheduler/contracts/getSchedulerResponse.js";
export * from "./providers/scheduler/contracts/IUntilParams.js";
export * from "./providers/scheduler/contracts/IStartAtPayload.js";
export * from "./providers/scheduler/contracts/IStartAtParams.js";
export * from "./providers/scheduler/contracts/ISchedulePayload.js";
export * from "./providers/scheduler/contracts/IListAllPayload.js";
export * from "./providers/scheduler/contracts/IIntervalParams.js";
export * from "./providers/queue/contracts/updateQueuePayload.js";
export * from "./providers/queue/contracts/updateQueueOptions.js";
export * from "./providers/queue/contracts/queueRate.js";
export * from "./providers/queue/contracts/queueDetailsResponse.js";
export * from "./providers/queue/contracts/createQueuePayload.js";
export * from "./providers/queue/contracts/createQueueOptions.js";
export * from "./providers/queue/contracts/IUpdateQueuePayload.js";
export * from "./providers/queue/contracts/IUpdateQueueOptions.js";
export * from "./providers/queue/contracts/IQueueRate.js";
export * from "./providers/queue/contracts/IQueueDetailsStats.js";
export * from "./providers/queue/contracts/IQueueDetails.js";
export * from "./providers/queue/contracts/ICreateQueuePayload.js";
export * from "./providers/queue/contracts/ICreateQueueOptions.js";
export * from "./providers/messages/contracts/unsubscribeEventsPayload.js";
export * from "./providers/messages/contracts/messageContact.js";
export * from "./providers/messages/contracts/listenMessagesPayload.js";
export * from "./providers/messages/contracts/listenEventsPayload.js";
export * from "./providers/messages/contracts/IUnsubscribeEventsPayload.js";
export * from "./providers/messages/contracts/IMessageContact.js";
export * from "./providers/messages/contracts/IListenMessagesPayload.js";
export * from "./providers/messages/contracts/IListenEventsPayload.js";
export * from "./providers/messages/enums/messageAction.js";
export * from "./providers/logger/enums/sourceType.js";
export * from "./providers/logger/enums/logLevel.js";
export * from "./providers/events/enums/vcrEventType.js";
export * from "./providers/events/enums/vcrEventSourceType.js";
export * from "./providers/logger/contracts/logContext.js";
export * from "./providers/logger/contracts/logAction.js";
export * from "./providers/logger/contracts/ILogContext.js";
export * from "./providers/logger/contracts/ILogAction.js";
export * from "./providers/assets/enums/fileRetentionPeriod.js";
export * from "./providers/assets/enums/assetsAction.js";
export * from "./providers/events/contracts/vcrEvent.js";
export * from "./providers/events/contracts/sessionCreatedDetails.js";
export * from "./providers/events/contracts/IVCREvent.js";
export * from "./providers/events/contracts/ISessionCreatedDetails.js";
export * from "./providers/assets/contracts/removeAssetPayload.js";
export * from "./providers/assets/contracts/listAssetsPayload.js";
export * from "./providers/assets/contracts/linkPayload.js";
export * from "./providers/assets/contracts/getAssetResponse.js";
export * from "./providers/assets/contracts/getAssetPayload.js";
export * from "./providers/assets/contracts/directoryPayload.js";
export * from "./providers/assets/contracts/assetListResponse.js";
export * from "./providers/assets/contracts/assetLinkResponse.js";
export * from "./providers/assets/contracts/assetInfo.js";
export * from "./providers/conversation/enums/conversationAction.js";
export * from "./providers/conversation/contracts/conversationPayloadWithCallback.js";
export * from "./providers/conversation/contracts/IConversationEventCallback.js";
export * from "./providers/state/enums/fullText/unit.js";
export * from "./providers/state/enums/fullText/tags.js";
export * from "./providers/state/enums/fullText/summarizeOption.js";
export * from "./providers/state/enums/fullText/sortOrder.js";
export * from "./providers/state/enums/fullText/sortByOption.js";
export * from "./providers/state/enums/fullText/searchOptions.js";
export * from "./providers/state/enums/fullText/returnOption.js";
export * from "./providers/state/enums/fullText/paramOption.js";
export * from "./providers/state/enums/fullText/limitOption.js";
export * from "./providers/state/enums/fullText/inKeysOptions.js";
export * from "./providers/state/enums/fullText/inFieldsOption.js";
export * from "./providers/state/enums/fullText/highlightOption.js";
export * from "./providers/state/enums/fullText/geoFilterOption.js";
export * from "./providers/state/enums/fullText/filterOption.js";
export * from "./providers/state/enums/fullText/fieldProperty.js";
export * from "./providers/state/enums/fullText/IndexType.js";
export * from "./providers/state/enums/fullText/ITags.js";
export * from "./providers/state/enums/fullText/ISummarizeOption.js";
export * from "./providers/state/enums/fullText/ISortByOption.js";
export * from "./providers/state/enums/fullText/ISearchOptions.js";
export * from "./providers/state/enums/fullText/IReturnOption.js";
export * from "./providers/state/enums/fullText/IParamOption.js";
export * from "./providers/state/enums/fullText/ILimitOption.js";
export * from "./providers/state/enums/fullText/IInKeysOption.js";
export * from "./providers/state/enums/fullText/IInFieldsOption.js";
export * from "./providers/state/enums/fullText/IHighlightOption.js";
export * from "./providers/state/enums/fullText/IGeoFilterOption.js";
export * from "./providers/state/enums/fullText/IFilterOption.js";
export * from "./providers/state/enums/fullText/IFieldProperty.js";
export * from "./providers/state/enums/fullText/FieldType.js";
export * from "./providers/state/contracts/fullText/stopwordsOptions.js";
export * from "./providers/state/contracts/fullText/schemaField.js";
export * from "./providers/state/contracts/fullText/prefixOptions.js";
export * from "./providers/state/contracts/fullText/createIndexOptions.js";
export * from "./providers/state/contracts/fullText/IStopwordsOptions.js";
export * from "./providers/state/contracts/fullText/ISchemaField.js";
export * from "./providers/state/contracts/fullText/IPrefixOptions.js";
export * from "./providers/state/contracts/fullText/ICreateIndexOptions.js";
//# sourceMappingURL=vcr.js.map