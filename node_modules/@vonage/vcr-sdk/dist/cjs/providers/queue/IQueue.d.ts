import { ICreateQueueOptions } from "./contracts/ICreateQueueOptions.js";
import { QueueDetailsResponse } from "./contracts/queueDetailsResponse.js";
import { IUpdateQueueOptions } from "./contracts/IUpdateQueueOptions.js";
export interface IQueue {
    createQueue(queueName: string, callback: string, options: ICreateQueueOptions): Promise<void>;
    updateQueue(queueName: string, options: IUpdateQueueOptions): Promise<void>;
    list(): Promise<string[]>;
    getQueueDetails(name: string): Promise<QueueDetailsResponse>;
    deleteQueue(name: string): Promise<void>;
    pauseQueue(name: string): Promise<void>;
    resumeQueue(name: string): Promise<void>;
    enqueue<T>(name: string, data: T[]): Promise<void>;
    enqueueSingle<T>(name: string, data: T): Promise<void>;
    deadLetterList(name: string): Promise<string[]>;
    deadLetterDequeue<T>(name: string, count: number): Promise<T>;
}
//# sourceMappingURL=IQueue.d.ts.map