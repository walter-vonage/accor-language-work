import { IConversation } from "./IConversation.js";
import { ISession } from "../../session/ISession.js";
export declare class Conversation implements IConversation {
    private session;
    private provider;
    constructor(session: ISession);
    /**
     * 1. If no filters are provided, subscribe to all events
     * 2. If filters are provided, subscribe to those events
     * 3. Scoped to the application
     * @param callback endpoint to receive events
     * @param events VONAGE conversation events e.g. ['app:knocking', 'audio:say', 'audio:say:stop', 'audio:say:done', 'audio:play', 'audio:play:stop', 'audio:play:done', 'audio:dtmf', 'audio:earmuff:on', 'audio:earmuff:off', 'audio:mute:on', 'audio:mute:off', 'leg:status:update', 'member:joined', 'member:invited', 'member:left', 'conversation:created']
     * @returns listener id
     */
    onConversationEvent(callback: string, events?: string[]): Promise<string>;
}
//# sourceMappingURL=conversation.d.ts.map